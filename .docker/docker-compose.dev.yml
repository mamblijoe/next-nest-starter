version: '3.7'

services:
  server:
    command: npm run start:dev
    container_name: server
    build:
      context: $PWD
      dockerfile: .docker/server/Dockerfile
    ports:
      - '3000'
    env_file: ../.env
    working_dir: /app/server
    volumes:
      - $PWD/app/server:/app/server
      - $PWD/app/server/node_modules:/app/server/node_modules
      - /app/server/dist

  client:
    command: npm run dev
    container_name: client
    build:
      context: $PWD
      dockerfile: .docker/client/Dockerfile
    ports:
      - '5000'
    env_file: ../.env
    working_dir: /app/client
    volumes:
      - $PWD/app/client:/app/client
      - $PWD/app/client/node_modules:/app/client/node_modules
      - /app/client/.next

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    env_file: ../.env
    environment:
      - MYSQL_DATABASE=db
      - MYSQL_ROOT_PASSWORD=db
      - MYSQL_USER=db
      - MYSQL_PASSWORD=db
    volumes:
      - ${PWD}/.docker/volumes/db:/var/lib/mysql
    ports:
      - "3306"

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    env_file: ../.env
    depends_on:
      - client
      - server
    volumes:
      - "./nginx/default.conf.template:/etc/nginx/templates/default.conf.template"
    ports:
      - "80:80"

networks:
  default:
    name: localhost
